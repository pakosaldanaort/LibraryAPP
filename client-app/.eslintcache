[{"/Users/nsl-fsaldana/Desktop/Library/client-app/src/index.tsx":"1","/Users/nsl-fsaldana/Desktop/Library/client-app/src/reportWebVitals.ts":"2","/Users/nsl-fsaldana/Desktop/Library/client-app/src/app/layout/App.tsx":"3","/Users/nsl-fsaldana/Desktop/Library/client-app/src/app/api/agent.ts":"4","/Users/nsl-fsaldana/Desktop/Library/client-app/src/features/nav/NavBar.tsx":"5","/Users/nsl-fsaldana/Desktop/Library/client-app/src/features/users/UserButtonList.tsx":"6","/Users/nsl-fsaldana/Desktop/Library/client-app/src/features/users/normaluser/NormalUserContainer.tsx":"7","/Users/nsl-fsaldana/Desktop/Library/client-app/src/features/users/librarian/LibrarianContainer.tsx":"8","/Users/nsl-fsaldana/Desktop/Library/client-app/src/features/users/librarian/forms/BookList.tsx":"9","/Users/nsl-fsaldana/Desktop/Library/client-app/src/features/users/librarian/forms/AddBookForm.tsx":"10"},{"size":522,"mtime":1611614295450,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1611338058079,"results":"13","hashOfConfig":"12"},{"size":741,"mtime":1611682077503,"results":"14","hashOfConfig":"12"},{"size":1373,"mtime":1611686479381,"results":"15","hashOfConfig":"12"},{"size":376,"mtime":1611682092986,"results":"16","hashOfConfig":"12"},{"size":1304,"mtime":1611679359201,"results":"17","hashOfConfig":"12"},{"size":2142,"mtime":1611685540289,"results":"18","hashOfConfig":"12"},{"size":1855,"mtime":1611684870892,"results":"19","hashOfConfig":"12"},{"size":3095,"mtime":1611688732440,"results":"20","hashOfConfig":"12"},{"size":1372,"mtime":1611688129538,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"no12z6",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},"/Users/nsl-fsaldana/Desktop/Library/client-app/src/index.tsx",[],["46","47"],"/Users/nsl-fsaldana/Desktop/Library/client-app/src/reportWebVitals.ts",[],"/Users/nsl-fsaldana/Desktop/Library/client-app/src/app/layout/App.tsx",[],"/Users/nsl-fsaldana/Desktop/Library/client-app/src/app/api/agent.ts",["48"],"import axios, { AxiosResponse } from 'axios'\nimport { IBook } from '../models/book';\nimport { IUser } from '../models/user';\n\naxios.defaults.baseURL = 'http://localhost:5000/';\n\nconst responseBody = (response : AxiosResponse) => response.data;\n\nconst requests = {\n    get: (url: string) => axios.get(url).then(responseBody),\n    post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\n    put: (url:string) => axios.put(url).then(responseBody),\n    del: (url:string) => axios.delete(url).then(responseBody)\n}\n\nconst Librarian = {\n    getOverDueBooks: (): Promise<IBook[]> => requests.get('Librarian/OverDueBooks'),\n    getAllBooks: (): Promise<IBook[]> => requests.get('Librarian/GetAllBooks'),\n    addBook: (book: any) => requests.post('Librarian/AddBook', book),\n    deleteBook:(bookId: number) => requests.del(`Librarian/DeleteBook/${bookId}`)\n}\n\nconst User = {\n    listBooks: (userId: number): Promise<IBook[]> => requests.get(`User/ListBooks/${userId}`),\n    getUsers: (): Promise<IUser[]> => requests.get('User/GetUsers'),\n    getNoCheckedOutBooks: (): Promise<IBook[]> => requests.get('User/GetNoCheckedOutBooks'),\n    checkOutBook: (userId: number, bookId: number) => requests.put(`User/CheckOutBook/${userId}/${bookId}`),\n    returnBook: (bookId: number) => requests.put(`User/ReturnBook/${bookId}`)\n}\n\nexport default {\n    Librarian,\n    User\n}","/Users/nsl-fsaldana/Desktop/Library/client-app/src/features/nav/NavBar.tsx",[],"/Users/nsl-fsaldana/Desktop/Library/client-app/src/features/users/UserButtonList.tsx",[],"/Users/nsl-fsaldana/Desktop/Library/client-app/src/features/users/normaluser/NormalUserContainer.tsx",[],"/Users/nsl-fsaldana/Desktop/Library/client-app/src/features/users/librarian/LibrarianContainer.tsx",[],"/Users/nsl-fsaldana/Desktop/Library/client-app/src/features/users/librarian/forms/BookList.tsx",["49"],"import React from 'react'\nimport { Button, Card, Container, Message } from 'semantic-ui-react'\nimport agent from '../../../../app/api/agent'\nimport { IBook } from '../../../../app/models/book'\n\ninterface IProps {\n    books: IBook[],\n    isLibrarian: boolean,\n    showOverDueDate: boolean,\n    checkOutBooks: boolean,\n    showReturnBook: boolean,\n    userId: number\n}\n\nexport const BookList: React.FC<IProps> = ({books, isLibrarian, showOverDueDate, checkOutBooks, showReturnBook, userId}) => {\n    const deleteBook = (bookId: number) => {\n        agent.Librarian.deleteBook(bookId).then((response) =>{\n            books = books.filter((book) => book.bookId !== bookId);\n            alert(response);\n        });\n    }\n\n    const checkOutBook = (userId: number, bookId:number) => {\n        agent.User.checkOutBook(userId, bookId).then((response) => {\n            books = books.filter((book) => book.bookId !== bookId);\n            alert(response);\n        })\n    }\n\n    const returnBook = (bookId: number) => {\n        agent.User.returnBook(bookId).then((response) => {\n            alert(response);\n        });\n    }\n    return (\n        <Container>\n            {\n                books.length == 0 && <Message error header='No Books Found' style={{marginTop: '3em'}}/>\n            }\n            <Card.Group>\n            {\n                books.map((book) => (\n                    <Card key={book.bookId}>\n                        <Card.Content>\n                            <Card.Header>{book.title}</Card.Header>\n                            <Card.Meta>{book.author}</Card.Meta>\n                            <Card.Description>\n                                ISBN: {book.isbn}\n                                {\n                                    showOverDueDate ? (<p>{'Overdue Date: ' + new Date(book.overDueDate).toDateString()}</p>) : ''\n                                }\n                            </Card.Description>\n                        </Card.Content>\n                        <Card.Content extra>\n                            <div className='ui two buttons'>\n                                {\n                                    !showOverDueDate && isLibrarian ? \n                                        (<Button basic color='red' onClick={() => deleteBook(book.bookId)}> Delete </Button>) : ''\n                                }\n                                {\n                                    !isLibrarian && checkOutBooks ?\n                                        (<Button basic color='blue' onClick={() => checkOutBook(userId, book.bookId)}> Check-Out Book </Button>) : ''\n                                }\n                                {\n                                    !isLibrarian && showReturnBook ?\n                                        (<Button basic color='green' onClick={() => returnBook(book.bookId)}> Return Book </Button>) : ''\n                                }\n                            </div>\n                        </Card.Content>\n                    </Card>\n                ))\n            }\n            </Card.Group>\n        </Container>\n        \n    )\n}","/Users/nsl-fsaldana/Desktop/Library/client-app/src/features/users/librarian/forms/AddBookForm.tsx",["50"],"import React, { useState } from 'react'\nimport { Button, Form, Segment } from 'semantic-ui-react'\nimport agent from '../../../../app/api/agent';\nimport { IBook } from '../../../../app/models/book';\n\n\nexport const AddBookForm = () => {\n    const newBook = {\n        title: '',\n        author: '',\n        isbn: ''\n    };\n\n    const [book, setBook] = useState(newBook);\n\n    const handleInputChange = (event: any) => {\n        const { name, value } = event.target;\n        setBook({...book, [name] : value});\n    }\n\n    const submitBook = (book: any) => {\n        agent.Librarian.addBook(book).then((response) =>{\n            alert(response);\n            setBook(newBook);\n        });\n    }\n\n    return (\n        <Segment clearing style={{marginTop: '0.5em'}}>\n            <Form>\n                <Form.Input placeholder='Book Title' name='title' onChange={handleInputChange} value={book.title}/>\n                <Form.Input placeholder='Book Author' name='author' onChange={handleInputChange} value={book.author}/>\n                <Form.Input placeholder='ISBN' name='isbn' onChange={handleInputChange} value={book.isbn}/>\n                <Button floated='right' positive type='submit' content='Submit' onClick={() => submitBook(book)}></Button>\n                <Button floated='right'  type='button' content='Cancel'></Button>\n            </Form>\n        </Segment>\n    )\n}",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":31,"column":1,"nodeType":"57","endLine":34,"endColumn":2},{"ruleId":"58","severity":1,"message":"59","line":38,"column":30,"nodeType":"60","messageId":"61","endLine":38,"endColumn":32},{"ruleId":"62","severity":1,"message":"63","line":4,"column":10,"nodeType":"64","messageId":"65","endLine":4,"endColumn":15},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'IBook' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]